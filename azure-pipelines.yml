trigger:
- master

# using ubuntu latest vmImage
pool:
  vmImage: 'ubuntu-latest'

pr: 'none'

stages:
  - stage:
    jobs:
      - job: 'build'
        steps:
          - task: SonarCloudPrepare@1
            inputs:
              SonarCloud: 'sulavAryalpipeLineDemo'
              organization: '042020-dotnet-uta'
              scannerMode: 'MSBuild'
              projectKey: '042020-dotnet-uta_sulavAryal-repo0'
              projectName: 'sulavAryal-repo0'
              extraProperties: |
                sonar.exclusions=**/obj/**,**/*.dll
                sonar.branch.name=$(Build.SourceBranchName)
                sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/coverage.opencover.xml
                sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx
          - script: dotnet build 'Project 0_Working\ConsoleShopper.UI\ConsoleShopper.UI.csproj'
          - task: DotNetCoreCLI@2
            displayName: Run Tests
            inputs:
              command: test
              arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger trx'
              projects: '**/*Tests.csproj'
              nobuild: true
          - script: |
              dotnet tool install -g dotnet-reportgenerator-globaltool
            displayName: Install reportgenerator
         

          - task: DotNetCoreCLI@2
          - script: echo "##vso[task.prependpath]$HOME/.dotnet/tools"
          - script: reportgenerator "-reports:$(Build.SourcesDirectory)/**/coverage.opencover.xml" "-targetdir:$(Build.SourcesDirectory)/Coverage" "-reporttypes:HtmlInline_AzurePipelines;Cobertura"
            displayName: Create Code Coverage Report

          - task: PublishCodeCoverageResults@1
            displayName: 'Publish Code Coverage'
            inputs:
              codeCoverageTool: Cobertura
              summaryFileLocation: '$(Build.SourcesDirectory)/Coverage/Cobertura.xml'
              reportDirectory: '$(Build.SourcesDirectory)/Coverage'
          
          - task: SonarCloudAnalyze@1
            displayName: 'Run Code Analysis'
            continueOnError: false

          - task: SonarCloudPublish@1
            inputs:
             pollingTimeoutSec: '300'
         